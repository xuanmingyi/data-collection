// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/xuanmingyi/data-collection/app/file/internal/biz"
	"github.com/xuanmingyi/data-collection/app/file/internal/conf"
	"github.com/xuanmingyi/data-collection/app/file/internal/data"
	"github.com/xuanmingyi/data-collection/app/file/internal/server"
	"github.com/xuanmingyi/data-collection/app/file/internal/service"
)

// Injectors from wire.go:

func initApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	fileRepo := data.NewFileRepo(dataData, logger)
	fileUseCase := biz.NewFileUseCase(fileRepo, logger)
	fileService := service.NewFileService(fileUseCase, logger)
	grpcServer := server.NewGRPCServer(fileService)
	app := newApp(grpcServer, logger)
	return app, func() {
		cleanup()
	}, nil
}
